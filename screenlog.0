bash fitmap.sh
Data set=exp1data Model=MOS Method=map
    Using 40 parallel CPU cores
 
Fitting MOS subj cb96, progress: 0.00%
   loss: 282.2539
Fitting MOS subj cb7, progress: 1.14%
   loss: 319.8286
Fitting MOS subj cb29, progress: 2.27%
   loss: 123.8587
Fitting MOS subj cb46, progress: 3.41%
   loss: 311.9366
Fitting MOS subj cb92, progress: 4.55%
   loss: 341.5118
Fitting MOS subj cb19, progress: 5.68%
   loss: 260.2480
Fitting MOS subj n32, progress: 6.82%
   loss: 284.7018
Fitting MOS subj n40, progress: 7.95%
   loss: 153.4599
Fitting MOS subj cb73, progress: 9.09%
   loss: 368.1473
Fitting MOS subj n11, progress: 10.23%
   loss: 337.2467
Fitting MOS subj n33, progress: 11.36%
   loss: 247.6928
Fitting MOS subj cb1, progress: 12.50%
   loss: 231.7926
Fitting MOS subj cb68, progress: 13.64%
   loss: 257.5049
Fitting MOS subj n17, progress: 14.77%
   loss: 270.8540
Fitting MOS subj n30, progress: 15.91%
   loss: 232.0073
Fitting MOS subj n26, progress: 17.05%
   loss: 239.0845
Fitting MOS subj cb45, progress: 18.18%
   loss: 342.8645
Fitting MOS subj cb49, progress: 19.32%
   loss: 233.3576
Fitting MOS subj cb76, progress: 20.45%
   loss: 344.8671
Fitting MOS subj n23, progress: 21.59%
   loss: 235.8543
Fitting MOS subj cb17, progress: 22.73%
   loss: 302.1002
Fitting MOS subj n24, progress: 23.86%
   loss: 229.9152
Fitting MOS subj cb88, progress: 25.00%
   loss: 357.9951
Fitting MOS subj cb35, progress: 26.14%
   loss: 295.4005
Fitting MOS subj n42, progress: 27.27%
   loss: 283.1556
Fitting MOS subj cb2, progress: 28.41%
   loss: 366.1947
Fitting MOS subj cb4, progress: 29.55%
   loss: 219.2480
Fitting MOS subj cb89, progress: 30.68%
   loss: 228.4332
Fitting MOS subj cb22, progress: 31.82%
   loss: 185.2914
Fitting MOS subj cb25, progress: 32.95%
   loss: 334.5506
Fitting MOS subj n36, progress: 34.09%
   loss: 257.8264
Fitting MOS subj cb12, progress: 35.23%
   loss: 290.7497
Fitting MOS subj cb98, progress: 36.36%
   loss: 271.3065
Fitting MOS subj n19, progress: 37.50%
   loss: 304.1283
Fitting MOS subj cb70, progress: 38.64%
   loss: 364.6544
Fitting MOS subj cb97, progress: 39.77%
   loss: 335.7904
Fitting MOS subj cb105, progress: 40.91%
   loss: 366.6690
Fitting MOS subj cb79, progress: 42.05%
   loss: 359.3860
Fitting MOS subj n8, progress: 43.18%
   loss: 251.1393
Fitting MOS subj cb14, progress: 44.32%
   loss: 356.4972
Fitting MOS subj cb108, progress: 45.45%
   loss: 347.7219
Fitting MOS subj cb100, progress: 46.59%
   loss: 248.7373
Fitting MOS subj n39, progress: 47.73%
   loss: 285.0837
Fitting MOS subj n3, progress: 48.86%
   loss: 320.6914
Fitting MOS subj n22, progress: 50.00%
   loss: 238.5910
Fitting MOS subj cb13, progress: 51.14%
   loss: 344.1912
Fitting MOS subj cb107, progress: 52.27%
   loss: 273.9686
Fitting MOS subj cb103, progress: 53.41%
   loss: 277.3714
Fitting MOS subj cb65, progress: 54.55%
   loss: 372.0454
Fitting MOS subj n20, progress: 55.68%
   loss: 309.5463
Fitting MOS subj n31, progress: 56.82%
   loss: 314.3250
Fitting MOS subj n35, progress: 57.95%
   loss: 251.8475
Fitting MOS subj cb81, progress: 59.09%
   loss: 335.1421
Fitting MOS subj cb44, progress: 60.23%
   loss: 371.6628
Fitting MOS subj cb5, progress: 61.36%
   loss: 354.6967
Fitting MOS subj cb20, progress: 62.50%
   loss: 327.4072
Fitting MOS subj cb55, progress: 63.64%
   loss: 292.6221
Fitting MOS subj cb52, progress: 64.77%
   loss: 260.8660
Fitting MOS subj cb57, progress: 65.91%
   loss: 252.4510
Fitting MOS subj cb18, progress: 67.05%
   loss: 321.5923
Fitting MOS subj cb28, progress: 68.18%
   loss: 355.9425
Fitting MOS subj cb30, progress: 69.32%
   loss: 132.6232
Fitting MOS subj cb77, progress: 70.45%
   loss: 340.8709
Fitting MOS subj n38, progress: 71.59%
   loss: 219.4564
Fitting MOS subj n25, progress: 72.73%
   loss: 281.8629
Fitting MOS subj cb84, progress: 73.86%
   loss: 372.0188
Fitting MOS subj n29, progress: 75.00%
   loss: 371.4980
Fitting MOS subj n37, progress: 76.14%
   loss: 252.3692
Fitting MOS subj cb6, progress: 77.27%
   loss: 295.0249
Fitting MOS subj cb53, progress: 78.41%
   loss: 303.1214
Fitting MOS subj cb99, progress: 79.55%
   loss: 337.8925
Fitting MOS subj n21, progress: 80.68%
   loss: 253.3741
Fitting MOS subj cb75, progress: 81.82%
   loss: 341.9330
Fitting MOS subj cb80, progress: 82.95%
   loss: 357.6039
Fitting MOS subj cb200, progress: 84.09%
   loss: 129.8890
Fitting MOS subj cb82, progress: 85.23%
   loss: 332.0866
Fitting MOS subj cb47, progress: 86.36%
   loss: 248.8906
Fitting MOS subj n14, progress: 87.50%
   loss: 285.4764
Fitting MOS subj cb63, progress: 88.64%
   loss: 343.0172
Fitting MOS subj cb74, progress: 89.77%
   loss: 347.2096
Fitting MOS subj n34, progress: 90.91%
   loss: 234.3579
Fitting MOS subj cb9, progress: 92.05%
   loss: 321.4117
Fitting MOS subj n10, progress: 93.18%
   loss: 252.6078
Fitting MOS subj n28, progress: 94.32%
   loss: 228.3085
Fitting MOS subj n13, progress: 95.45%
   loss: 255.3292
Fitting MOS subj n41, progress: 96.59%
   loss: 243.5203
Fitting MOS subj cb101, progress: 97.73%
   loss: 323.9817
Fitting MOS subj cb3, progress: 98.86%
   loss: 257.3045

parallel computing spend 24923.95 seconds
Simulating MOS
    Using 1 parallel CPU cores
 
/home/zfang/Documents/github/policy-analysis/utils/analyze.py:65: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  pivot_table  = exp1data.groupby(by=['sub_id', 'b_type', 'feedback_type', 'group']).mean()[features].reset_index()
#-------- Clean Outliers ---------- #

    308 rows
    90.6% data has been retained
              T         dof alternative     p-val         CI95%   cohen-d     BF10    power
T-test  3.92884  229.982741   two-sided  0.000113  [0.33, 1.01]  0.470452  177.756  0.97906
               T         dof alternative         p-val           CI95%   cohen-d       BF10     power
T-test -5.529657  233.556289   two-sided  8.565148e-08  [-1.75, -0.83]  0.659085  1.625e+05  0.999862
               T         dof alternative     p-val         CI95%   cohen-d    BF10     power
T-test  3.519293  228.820359   two-sided  0.000522  [0.27, 0.97]  0.422049  43.565  0.947782
(py3) zfang@adacog-gpu:~/Documents/github/policy-analysis$ [K(py3) zfang@adacog-gpu:~/Documents/github/policy-analysis$ bash [K rune[Kmaps[K
bash: runmap: No such file or directory
(py3) zfang@adacog-gpu:~/Documents/github/policy-analysis$ barun e[Kfitmap.sh

Command 'barun' not found, did you mean:

  command 'bbrun' from deb bbrun (1.6-7)

Try: sudo apt install <deb name>

(py3) zfang@adacog-gpu:~/Documents/github/policy-analysis$ barun fitmap.sh[1P fitmap.sh[1P fitmap.sh[1P fitmap.shs fitmap.shh fitmap.sh
Data set=exp1data Model=MOS Method=map
    Using 40 parallel CPU cores
 
Fitting MOS subj cb25, progress: 0.00%
   loss: 282.1921
Fitting MOS subj n29, progress: 1.14%
   loss: 318.7398
Fitting MOS subj cb7, progress: 2.27%
   loss: 266.1262
Fitting MOS subj cb80, progress: 3.41%
   loss: 313.5717
Fitting MOS subj n17, progress: 4.55%
   loss: 208.1996
Fitting MOS subj cb9, progress: 5.68%
   loss: 274.3364
Fitting MOS subj cb100, progress: 6.82%
   loss: 186.7926
Fitting MOS subj n25, progress: 7.95%
   loss: 227.2701
Fitting MOS subj n35, progress: 9.09%
   loss: 185.9795
Fitting MOS subj n3, progress: 10.23%
   loss: 270.2746
Fitting MOS subj cb30, progress: 11.36%
   loss: 105.1439
Fitting MOS subj n34, progress: 12.50%
   loss: 182.1468
Fitting MOS subj cb99, progress: 13.64%
   loss: 282.5098
Fitting MOS subj cb103, progress: 14.77%
   loss: 220.7865
Fitting MOS subj n38, progress: 15.91%
   loss: 156.7306
Fitting MOS subj n33, progress: 17.05%
   loss: 189.2064
Fitting MOS subj cb92, progress: 18.18%
   loss: 293.4848
Fitting MOS subj cb47, progress: 19.32%
   loss: 199.2085
Fitting MOS subj cb76, progress: 20.45%
   loss: 290.7689
Fitting MOS subj cb3, progress: 21.59%
   loss: 193.1311
Fitting MOS subj cb35, progress: 22.73%
   loss: 240.5154
Fitting MOS subj cb96, progress: 23.86%
   loss: 219.3348
Fitting MOS subj n36, progress: 25.00%
   loss: 206.9535
Fitting MOS subj cb88, progress: 26.14%
   loss: 311.0082
Fitting MOS subj cb5, progress: 27.27%
   loss: 307.4910
Fitting MOS subj cb22, progress: 28.41%
   loss: 160.9415
Fitting MOS subj cb74, progress: 29.55%
   loss: 291.9319
Fitting MOS subj cb28, progress: 30.68%
   loss: 302.7738
Fitting MOS subj n8, progress: 31.82%
   loss: 192.2263
Fitting MOS subj n10, progress: 32.95%
   loss: 200.8957
Fitting MOS subj cb70, progress: 34.09%
   loss: 312.7462
Fitting MOS subj cb57, progress: 35.23%
   loss: 193.5468
Fitting MOS subj cb77, progress: 36.36%
   loss: 289.5055
Fitting MOS subj cb49, progress: 37.50%
   loss: 187.6563
Fitting MOS subj cb98, progress: 38.64%
   loss: 221.8853
Fitting MOS subj cb89, progress: 39.77%
   loss: 175.4899
Fitting MOS subj cb101, progress: 40.91%
   loss: 269.1302
Fitting MOS subj cb2, progress: 42.05%
   loss: 312.6832
Fitting MOS subj cb82, progress: 43.18%
   loss: 277.4043
Fitting MOS subj n20, progress: 44.32%
   loss: 254.2682
Fitting MOS subj cb52, progress: 45.45%
   loss: 202.6787
Fitting MOS subj cb17, progress: 46.59%
   loss: 242.8836
Fitting MOS subj cb29, progress: 47.73%
   loss: 96.6412
Fitting MOS subj cb44, progress: 48.86%
   loss: 323.6589
Fitting MOS subj n23, progress: 50.00%
   loss: 179.5971
Fitting MOS subj n41, progress: 51.14%
   loss: 183.2432
Fitting MOS subj cb65, progress: 52.27%
   loss: 322.9168
Fitting MOS subj n21, progress: 53.41%
   loss: 200.5163
Fitting MOS subj cb200, progress: 54.55%
   loss: 103.7705
Fitting MOS subj n37, progress: 55.68%
   loss: 180.7817
Fitting MOS subj cb68, progress: 56.82%
   loss: 218.6694
Fitting MOS subj cb13, progress: 57.95%
   loss: 293.7126
Fitting MOS subj cb19, progress: 59.09%
   loss: 188.2740
Fitting MOS subj n13, progress: 60.23%
   loss: 190.9360
Fitting MOS subj n39, progress: 61.36%
   loss: 229.3446
Fitting MOS subj cb18, progress: 62.50%
   loss: 267.2112
Fitting MOS subj n30, progress: 63.64%
   loss: 176.2800
Fitting MOS subj cb79, progress: 64.77%
   loss: 314.5410
Fitting MOS subj cb105, progress: 65.91%
   loss: 316.9073
Fitting MOS subj n31, progress: 67.05%
   loss: 256.8986
Fitting MOS subj n40, progress: 68.18%
   loss: 126.6608
Fitting MOS subj cb1, progress: 69.32%
   loss: 177.7970
Fitting MOS subj n26, progress: 70.45%
   loss: 166.9789
Fitting MOS subj n32, progress: 71.59%
   loss: 233.9342
Fitting MOS subj cb12, progress: 72.73%
   loss: 236.5492
Fitting MOS subj cb20, progress: 73.86%
   loss: 272.5918
Fitting MOS subj cb75, progress: 75.00%
   loss: 292.9037
Fitting MOS subj cb14, progress: 76.14%
   loss: 300.4591
Fitting MOS subj cb97, progress: 77.27%
   loss: 282.9717
Fitting MOS subj cb6, progress: 78.41%
   loss: 244.3712
Fitting MOS subj n14, progress: 79.55%
   loss: 226.3490
Fitting MOS subj cb108, progress: 80.68%
   loss: 298.6479
Fitting MOS subj cb46, progress: 81.82%
   loss: 256.8064
Fitting MOS subj n42, progress: 82.95%
   loss: 227.6870
Fitting MOS subj n19, progress: 84.09%
   loss: 256.6865
Fitting MOS subj cb4, progress: 85.23%
   loss: 158.0220
Fitting MOS subj cb55, progress: 86.36%
   loss: 241.2840
Fitting MOS subj n22, progress: 87.50%
   loss: 185.7188
Fitting MOS subj n11, progress: 88.64%
   loss: 288.2423
Fitting MOS subj cb81, progress: 89.77%
   loss: 284.2013
Fitting MOS subj cb107, progress: 90.91%
   loss: 211.1158
Fitting MOS subj n28, progress: 92.05%
   loss: 172.3423
Fitting MOS subj cb53, progress: 93.18%
   loss: 248.3746
Fitting MOS subj cb73, progress: 94.32%
   loss: 313.0112
Fitting MOS subj cb63, progress: 95.45%
   loss: 294.7604
Fitting MOS subj cb45, progress: 96.59%
   loss: 288.7185
Fitting MOS subj cb84, progress: 97.73%
   loss: 319.9247
Fitting MOS subj n24, progress: 98.86%
   loss: 170.0731

parallel computing spend 40422.72 seconds
Simulating MOS
    Using 1 parallel CPU cores
 
#-------- Clean Outliers ---------- #

    332 rows
    97.6% data has been retained
               T         dof alternative     p-val          CI95%   cohen-d   BF10     power
T-test -1.474363  151.610645   two-sided  0.142457  [-0.25, 0.04]  0.229611  0.457  0.312524
               T         dof alternative     p-val          CI95%   cohen-d   BF10     power
T-test -0.073801  163.966968   two-sided  0.941258  [-0.13, 0.12]  0.011456  0.168  0.050617
#-------- Clean Outliers ---------- #

    332 rows
    97.6% data has been retained
m3_visualize.py:157: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  data = data.groupby(by=['sub_id']).mean().reset_index()
 log_diff: r=0.12662628796101283, p=0.24532321119986827
 log_diff: r=0.05129304294248252, p=0.6390549651928928
 log_diff: r=0.12694107675154592, p=0.24414217132826382
#-------- Clean Outliers ---------- #

    332 rows
    97.6% data has been retained
Traceback (most recent call last):
  File "m3_visualize.py", line 443, in <module>
    HC_PAT_policy('MOS')
  File "m3_visualize.py", line 200, in HC_PAT_policy
    data = data.groupby(by=['sub_id', 'feedback_type', 'b_type', 'is_PAT']
  File "/home/zfang/anaconda3/envs/py3/lib/python3.8/site-packages/pandas/core/groupby/generic.py", line 1411, in __getitem__
    return super().__getitem__(key)
  File "/home/zfang/anaconda3/envs/py3/lib/python3.8/site-packages/pandas/core/base.py", line 238, in __getitem__
    raise KeyError(f"Columns not found: {str(bad_keys)[1:-1]}")
KeyError: "Columns not found: 'l1', 'l3', 'l2'"
(py3) zfang@adacog-gpu:~/Documents/github/policy-analysis$ 